"use strict";(self.webpackChunkStudy_React_js=self.webpackChunkStudy_React_js||[]).push([[51],{252:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>p});var t=o(4848),r=o(8453);const c={},s="Higher order components",a={id:"react/hoc",title:"Higher order components",description:"Higher-order components (HOCs) are a powerful feature of the React library. They allow you to reuse component logic across multiple components.",source:"@site/docs/react/hoc.md",sourceDirName:"react",slug:"/react/hoc",permalink:"/docs/react/hoc",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Controlled/Uncontrolled Components",permalink:"/docs/react/controlledcomp"},next:{title:"Keys",permalink:"/docs/react/keys"}},i={},p=[];function l(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"higher-order-components",children:"Higher order components"}),"\n",(0,t.jsx)(n.p,{children:"Higher-order components (HOCs) are a powerful feature of the React library. They allow you to reuse component logic across multiple components."}),"\n",(0,t.jsx)(n.p,{children:"In React, a higher-order component is a function that takes a component as an argument and returns a new component that wraps the original component."}),"\n",(0,t.jsx)(n.p,{children:"HOCs allow you to add additional functionality to a component without modifying the component's code. For example, you can use a HOC to add authentication or routing capabilities to a component or to apply a specific style or behavior to multiple components."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'// Higher Order Component\r\nconst withLogging = (WrappedComponent) => {\r\n    return class extends React.Component {\r\n        componentDidMount() {\r\n            console.log("Component is mounted!");\r\n        }\r\n        \r\n        render() {\r\n            return <WrappedComponent {...this.props} />;\r\n        }\r\n    }\r\n}\r\n\r\n// Component\r\nconst MyComponent = (props) => {\r\n    return <div>Hello, {props.name}!</div>;\r\n}\r\n\r\n// Enhanced Component\r\nconst LoggedComponent = withLogging(MyComponent);\r\n\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var t=o(6540);const r={},c=t.createContext(r);function s(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);